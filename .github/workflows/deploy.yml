name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and Cache Dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps #we pass a path nowif you published it as a standalone repo, use olivermengich/action1
        with:
          caching: 'false' # this disable caching this linting step
      - name: Output information
        run: echo "Cache used ? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and Cache Dependencies
        id: Caching_Deps
        uses: ./.github/actions/cached-deps #we pass a path nowif you published it as a standalone repo, use olivermengich/action1
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json #files to include
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and Cache Dependencies
        uses: ./.github/actions/cached-deps #we pass a path now. If you published it as a standalone repo, pass uses: olivermengich/action1
        #github automatically searches for a .yml file when you pass the path 
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files #choose the artifacts to download by name
          path: ./dist #where the artifacts should be downloaded to
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."
  information:
    runs-on: ubuntu-latest
    steps:
      - name: Run custom action
        uses: ./.github/actions/deploy-s3-javascript